{"version":3,"file":"static/js/202.3c287502.chunk.js","mappings":"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","sources":["components/contactForm/ContactForm.styled.jsx","components/contactForm/ContactForm.jsx","components/filter/Filter.styled.jsx","components/filter/Filter.jsx","components/contactListItem/ContactListItem.styled.jsx","components/contactListItem/ContactListItem.jsx","components/contactList/ContactList.styled.jsx","components/contactList/ContactList.jsx","redux/contacts/selectors.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  background: #fff;\n  color: #333;\n  padding: 15px;\n  width: 280px;\n  border: none;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  color: #252537;\n\n  width: 280px;\n  height: 50px;\n\n  padding: 0 20px;\n  background: #fff;\n  border-radius: 5px;\n\n  outline: none;\n  border: none;\n\n  cursor: pointer;\n  text-align: center;\n  transition: all 0.2s linear;\n\n  margin: 7% auto;\n  letter-spacing: 0.05em;\n`;\n","import React, { useState } from 'react';\nimport { Input, Form, Button } from 'components/contactForm/ContactForm.styled';\n\nexport function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let newcontact = {\n      name,\n      number,\n    };\n    onSubmit(newcontact);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <label htmlFor=\"inputName\">Name</label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          id=\"inputName\"\n          value={name}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"inputNumber\">Number</label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          id=\"inputNumber\"\n          value={number}\n          onChange={handleChange}\n        />\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterArea = styled.input`\n  border: none;\n  padding: 5px;\n  margin-bottom: 15px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FilterArea } from 'components/filter/Filter.styled';\n\nexport const Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <FilterArea type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  text-align: left;\n  font-style: italic;\n  display: flex;\n  gap: 15px;\n  justify-content: space-between;\n  margin-bottom: 5px;\n`;\n\nexport const DeleteButton = styled.button`\n background-color: transparent;\n border-radius: 10px;\n border: 0.5px solid;\n padding 2px 6px;\n cursor: pointer;\n\n &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { AiOutlinePhone } from 'react-icons/ai';\n\nimport {\n  ListItem,\n  DeleteButton,\n} from 'components/contactListItem/ContactListItem.styled';\n\nexport const ContactListItem = ({ name, number, onDeleteContact, id }) => (\n  <ListItem>\n    <div>\n      <AiOutlinePhone size={20} /> {name} : {number}\n    </div>\n    <DeleteButton onClick={() => onDeleteContact(id)}>\n      <RiDeleteBinLine size={20} />\n    </DeleteButton>\n  </ListItem>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\ncolor: #000000\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ContactListItem } from 'components/contactListItem/ContactListItem';\nimport {List} from 'components/contactList/ContactList.styled'\n\nexport const ContactList = ({ filtredContacts, onDeleteContact }) => (\n  <List>\n    {filtredContacts.map(contact => (\n      <ContactListItem\n        key={contact.id}\n        id={contact.id}\n        name={contact.name}\n        number={contact.number}\n        onDeleteContact={onDeleteContact}\n      />\n    ))}\n  </List>\n);\n\nContactList.propTypes = {\n  filtredContacts: PropTypes.array.isRequired,\n};\n\n\n\n\n","export const selectСontacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","import React, { useEffect } from 'react';\n\nimport { Header } from '../../components/App.styled';\nimport { ContactForm } from '../../components/contactForm/ContactForm';\nimport { Filter } from '../../components/filter/Filter';\nimport { ContactList } from '../../components/contactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport {\n  selectСontacts,\n  selectFilter,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from 'redux/contacts/operations';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectСontacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const onAddContact = newcontact => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === newcontact.name.toLowerCase()\n      )\n    ) {\n      alert(`${newcontact.name} is already in contacts!`);\n      return;\n    }\n\n    dispatch(addContact(newcontact));\n  };\n\n  const changeFilter = event => dispatch(setFilter(event.currentTarget.value));\n\n  const getFiltredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const filtredContacts = getFiltredContacts();\n\n  return (\n    <>\n      <Header>Phonebook</Header>\n      <ContactForm onSubmit={onAddContact} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList\n        filtredContacts={filtredContacts}\n        onDeleteContact={onDeleteContact}\n      />\n    </>\n  );\n}\n"],"names":["Form","styled","Input","Button","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","preventDefault","htmlFor","type","pattern","title","required","id","onChange","FilterArea","Filter","ListItem","DeleteButton","ContactListItem","onDeleteContact","size","onClick","List","ContactList","filtredContacts","map","contact","selectСontacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactsPage","dispatch","useDispatch","useSelector","useEffect","fetchContacts","normalizedFilter","toLowerCase","includes","getFiltredContacts","newcontact","find","alert","addContact","setFilter","currentTarget","contactId","deleteContact"],"sourceRoot":""}